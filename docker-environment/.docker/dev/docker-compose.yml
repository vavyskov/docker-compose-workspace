version: '3.8'

services:
  mkcert:
    image: vavyskov/mkcert:${MKCERT_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mkcert
    environment:
      MKCERT_HOSTNAMES: "*.localhost.dev *.localhost.test *.example.com *.example.edu"
      HOST_USER_ID: 1000
      HOST_USER_NAME: user
    volumes:
      - ./certificates:/root/.local/share/mkcert
    network_mode: none

  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_traefik
    depends_on:
      - mkcert
    volumes:
      ## Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      ## Custom certificates (set path also in dynamic/certificates.yml)
      - ./certificates:/etc/ssl/certificates:ro
      ## Configuration
      - ./config/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./config/traefik.yml:/etc/traefik/traefik.yml:ro
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
      ## Dashboard
      - target: 8080
        published: ${TRAEFIK_PORT}
    networks:
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_traefik.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_traefik.rule=Host(`${TRAEFIK_HOSTNAME}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_traefik.tls=true
      ## BasicAuth (BCrypt or MD5 not SHA1) - https://www.htaccesstools.com/htpasswd-generator/
      ## In password type $ as $$
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_traefik.middlewares=${COMPOSE_PROJECT_NAME}_auth-users
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_auth-users.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}

  adminer:
    image: adminer:${ADMINER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    ports:
      - target: 8080
        published: ${ADMINER_PORT}
    networks:
      - frontend_network
      - database_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_adminer.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.rule=Host(`${ADMINER_HOSTNAME}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.tls=true

  mailcatcher:
    image: vavyskov/mailcatcher:${MAILCATCHER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mailcatcher
    ports:
      - target: 80
        published: ${MAILCATCHER_PORT:-1081}
      - target: 25
        published: ${SMTP_PORT:-1025}
    networks:
      - frontend_network
      - backend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_mailcatcher.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailcatcher.rule=Host(`${MAILCATCHER_HOSTNAME}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailcatcher.tls=true

networks:
  frontend_network:
    external: true
  backend_network:
    external: true
  database_network:
    external: true